<launch>
	<!-- https://github.com/danielsnider/URC/blob/master/rosws/src/rover_robot_localization/launch/dual_ekf.launch -->

	<group ns="rover_odometry">
		<node name="odom_record" pkg="rosbag" type="record" args="-o /home/nvidia/BAGS/odometry /odometry/gps/fix /odometry/gps/sentence /odometry/imu/data /odometry/odometry/filtered /odometry/odometry/gps /odometry/vel" output="screen" />

        <!-- ########## Performs a transform on the GPS and IMU frames so odom can use it ########## -->
	<node pkg="tf2_ros" type="static_transform_publisher" name="imu_tf" args="0 0 0 0 0 0 base_link imu" />
	<node pkg="tf2_ros" type="static_transform_publisher" name="gps_tf" args="0 0 0 0 0 0 base_link gps" />

	<!-- ########## UM7 IMU driver for broadcasting IMU data ########## -->
	<node name="um7_driver" pkg="um7" type="um7_driver" respawn="true" output="screen">
		<param name="port" value="/dev/rover/ttyIMU"/>
		<param name="frame_id" type="string" value="imu"/>
		<param name="baud" type="int" value="115200"/>
		<param name="mag_updates" type="bool" value="true"/>
	</node>


	<!-- ########## Processes GPS Messages ########## -->
	<node name="gps_and_imu" pkg="rover_odometry" type="odometry.py" respawn="true" output="screen" >
		<!--<param name="gps_sentence_topic" value="/nmea_sentence"/>-->
		<!--<remap from="nmea_sentence" to="gps/sentence"/>-->
	</node>

	<!-- ########## Converts GPS Sentences to GPS Fix data ########## -->
	<node name="navsat_driver" pkg="nmea_navsat_driver" type="nmea_topic_driver" output="screen">
		<remap from="nmea_sentence" to="gps/sentence"/>
		<remap from="fix" to="gps/fix"/>
	</node>


	<!-- NAVSAT_TRANSFORM_NODE -->
	<node pkg="robot_localization" type="navsat_transform_node" name="navsat_transform_node"  respawn="true" output="screen">
		<param name="magnetic_declination_radians" value="0.24434609"/> <!-- Drumheller: 0.244346?? need more precise -->
		<!-- <param name="zero_altitude" value="true" /> -->
		<param name="publish_filtered_gps" value="true" />

		<!-- OUTPUT TOPICS -->
		<remap from="/odometry/gps" to="/odometry/filtered_gps"/>
		<remap from="/gps/filtered" to="/gps/filtered"/>

		<!-- INPUT TOPICS -->
		<remap from="/gps/fix" to="/gps/fix"/>
		<remap from="/odometry/filtered" to="/odometry/filtered_global"/>
	</node>

	<!-- GLOBAL_EKF_LOCALIZATION -->
	<node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization_global" clear_params="true" respawn="true">
		<remap from="/odometry/filtered" to="/odometry/filtered_global"/>
		<param name="frequency" value="5"/>

		<param name="world_frame" value="map"/>
		<param name="map_frame" value="map"/>
		<param name="odom_frame" value="odom"/>
		<param name="base_link_frame" value="base_link"/>
		<param name="vo_used" value="false"/>
		<param name="two_d_mode" value="false"/>

		<param name="imu_used" value="true"/>
		<param name="odom_used" value="true"/>
            	<param name="imu0"  value="imu/data"/>
		<param name="odom0" value="gps"/>
		<param name="sensor_timeout" value="0.1"/>

	
            	<rosparam param="odom0_config">[true, true, false,
                                          	false, false, false,
                                          	false , false, false,
                                          	false, false, false,
                                          	false, false, false]</rosparam>

            	<rosparam param="imu0_config">[false, false, false,
                                         	true , true , true,
                                         	false, false, false,
                                         	true , true , true ,
                                         	false , false , false ]</rosparam>

            	<param name="odom0_differential" value="false"/>
		<param name="imu0_differential"  value="false"/>

		<param name="imu0_remove_gravitational_acceleration" value="true"/>

		<param name="odom0_relative" value="false"/>
		<param name="imu0_relative"  value="false"/>

		<param name="print_diagnostics" value="true"/>

		<!-- ======== ADVANCED PARAMETERS ======== -->

		<param name="odom0_queue_size" value="2"/>
		<param name="imu0_queue_size" value="10"/>

	</node>

  	<!-- LOCAL_EKF_LOCALIZATION -->
  	<node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization_local" clear_params="true" respawn="true">
    		<remap from="/odometry/filtered" to="/odometry/filtered_local"/>
    		<param name="frequency" value="5"/>
		<param name="two_d_mode" value="false"/>
		<param name="imu_used" value="true"/>
		<param name="sensor_timeout" value="0.1"/>
            	<param name="imu0"  value="imu/data"/>

		<param name="world_frame" value="odom"/>
		<param name="map_frame" value="map"/>
		<param name="odom_frame" value="odom"/>
		<param name="base_link_frame" value="base_link"/>

            	<rosparam param="imu0_config">[false, false, false,
                                         	true , true , true,
                                         	false, false, false,
                                         	true , true , true ,
                                         	false , false , false ]</rosparam>


		<param name="imu0_relative"  value="false"/>
		<param name="imu0_nodelay" value="true"/>

		<!-- ======== ADVANCED PARAMETERS ======== -->
		<param name="imu0_queue_size" value="10"/>

	</node>

</launch>

